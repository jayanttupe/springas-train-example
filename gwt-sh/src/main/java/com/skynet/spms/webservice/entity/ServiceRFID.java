
/*
 * 
 */

package com.skynet.spms.webservice.entity;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

import com.skynet.spms.webservice.RFIDPortTypeSOAP;

/**
 * This class was generated by Apache CXF 2.3.1
 * Fri May 27 14:45:04 CST 2011
 * Generated source version: 2.3.1
 * 
 */


@WebServiceClient(name = "ServiceRFID", 
                  wsdlLocation = "file:../ant/RFIDWSDLFile1_2.wsdl",
                  targetNamespace = "http://www.skynetsoft.org/RFIDwsdl") 
public class ServiceRFID extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.skynetsoft.org/RFIDwsdl", "ServiceRFID");
    public final static QName PortRFID = new QName("http://www.skynetsoft.org/RFIDwsdl", "PortRFID");
    static {
        URL url = null;
        try {
            url = new URL("file:../ant/RFIDWSDLFile1_2.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:../ant/RFIDWSDLFile1_2.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ServiceRFID(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ServiceRFID(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceRFID() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns RFIDPortTypeSOAP
     */
    @WebEndpoint(name = "PortRFID")
    public RFIDPortTypeSOAP getPortRFID() {
        return super.getPort(PortRFID, RFIDPortTypeSOAP.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RFIDPortTypeSOAP
     */
    @WebEndpoint(name = "PortRFID")
    public RFIDPortTypeSOAP getPortRFID(WebServiceFeature... features) {
        return super.getPort(PortRFID, RFIDPortTypeSOAP.class, features);
    }

}
