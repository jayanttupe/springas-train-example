<?xml version="1.0"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                layout="vertical"
                creationComplete="initApp()"
                horizontalAlign="left"
                viewSourceURL="srcview/index.html">

    <fx:Script>
		<![CDATA[
        import com.ncs.swc.ModuleClass;

        import mx.controls.Alert;
        import mx.events.ModuleEvent;
        import mx.modules.IModuleInfo;
        import mx.modules.Module;
        import mx.modules.ModuleManager;
        import org.springextensions.actionscript.context.support.FlexXMLApplicationContext;
        import org.springextensions.actionscript.module.BasicSASModule;
        import org.springextensions.actionscript.module.ISASModule;
        import org.springextensions.actionscript.utils.ApplicationUtils;

        {
            ModuleClass
        }
        private var _applicationContext:FlexXMLApplicationContext;
        private var _moduleInfoList:Dictionary = new Dictionary();

        private function initApp():void {
            var customMenuItem1:ContextMenuItem = new ContextMenuItem("Open application-context.xml");
            customMenuItem1.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function():void {
                navigateToURL(new URLRequest('application-context.xml'));
            });
            var customMenuItem2:ContextMenuItem = new ContextMenuItem("Open module1-context.xml");
            customMenuItem2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function():void {
                navigateToURL(new URLRequest('module1-context.xml'));
            });
            var customMenuItem3:ContextMenuItem = new ContextMenuItem("Open module2-context.xml");
            customMenuItem3.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function():void {
                navigateToURL(new URLRequest('module2-context.xml'));
            });
            ApplicationUtils.application.contextMenu.customItems.push(customMenuItem1);
            ApplicationUtils.application.contextMenu.customItems.push(customMenuItem2);
            ApplicationUtils.application.contextMenu.customItems.push(customMenuItem3);

            _applicationContext = new FlexXMLApplicationContext("application-context.xml");
            _applicationContext.addEventListener(Event.COMPLETE, complete_handler);
            _applicationContext.load();
        }

        private function complete_handler(event:Event):void {
            _applicationContext.removeEventListener(Event.COMPLETE, complete_handler);
            loadModules();
        }

        private function loadModules():void {
            loadModule("module1-1.1.swf");
            loadModule("module2-1.1.swf");
        }

        private function loadModule(url:String):void {
            var info:IModuleInfo = ModuleManager.getModule(url);
            _moduleInfoList[info] = true;
            processModuleInfo(info);
        }

        private function processModuleInfo(info:IModuleInfo):void {
            //add
            info.addEventListener(ModuleEvent.READY, handleModuleReady);
            info.addEventListener(ModuleEvent.ERROR, handleModuleError);
            info.load(new ApplicationDomain(ApplicationDomain.currentDomain));
        }

        private function handleModuleReady(event:ModuleEvent):void {
            var info:IModuleInfo = event.module;
            cleanupInfo(info);
            var module:ISASModule = info.factory.create() as ISASModule;
            //set the applicationContext property, inside the BasicSASModule this
            //will automatically be set as the moduleApplicationContext's parent
            module.applicationContext = _applicationContext;
            (module as Module).data = info;
            if (info.url == "module1-1.1.swf") {
                module1.addChild(module as DisplayObject);
            } else {
                module2.addChild(module as DisplayObject);
            }
        }

        private function handleModuleError(event:ModuleEvent):void {
            Alert.show(event.errorText);
        }

        private function cleanupInfo(info:IModuleInfo):void {
            delete _moduleInfoList[info];
            info.removeEventListener(ModuleEvent.READY, handleModuleReady);
            info.removeEventListener(ModuleEvent.ERROR, handleModuleError);
        }

        protected function btnUnload_clickHandler(event:MouseEvent):void {
            var mod:Module = module1.removeChildAt(0) as Module;
            unloadModule(mod);
        }

        protected function btnUnload2_clickHandler(event:MouseEvent):void {
            var mod:Module = module2.removeChildAt(0) as Module;
            unloadModule(mod);
        }

        protected function unloadModule(module:Module):void {
            if (module != null) {
                (module as BasicSASModule).moduleApplicationContext.dispose();
                (module as BasicSASModule).moduleApplicationContext = null;
                (module as BasicSASModule).applicationContext = null;
                (module.data as IModuleInfo).unload();
                module.data = null;
            }
        }
        ]]>
	</fx:Script>
    <mx:Button id="btnUnload"
               label="Unload module1"
               click="btnUnload_clickHandler(event)"/>
    <mx:Button id="btnUnload2"
               label="Unload module2"
               click="btnUnload2_clickHandler(event)"/>
    <mx:Label fontSize="20"
              text="APPLICATION"/>
    <mx:HRule width="500"/>
    <mx:VBox width="100%"
             height="100%"
             id="module1"/>
    <mx:HRule width="500"/>
    <mx:VBox width="100%"
             height="100%"
             id="module2"/>

</mx:Application>
